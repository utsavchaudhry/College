/**
 @file
 @author Mark Boady <mwb33@drexel.edu>
 @date August 2024
 @section Description
 
 This file provides testing implementations of the 6 functions.
 
 This file is for testing.
 
 The course assistant will use a custom secret experiments.cpp for testing.
 
 Your program should work for any functions that meet the requirement.
 
 */

//DO NOT EDIT THIS FILE

#include "experiments.h"
//Does something weird
bool f(int x){
    //Treat the integer as two numbers
    int a = x % 256;
    int b = (x/256)%256;
    bool test = ((a * b) % 121 == 38);
    test = test && x%2==1;
    test = test && x%5==0;
    return test;
}
//Check that you find 0 when everything is true
bool g(int x){return true;}
//Check that you find the answer if only one
bool h(int x){return x==-98293;}
//Check that you handle postive and negative correctly
bool m(int x){return x==256 || x==-256;}
//Makes sure you find 4 answers one in each thread
bool n(int x){
    return (x==999) || (x==8888) || (x==-513) || (x==-212);
}

//No idea, something probably?
bool q(int x){
    int a = x % 256;
    int b = (x/256)%256;
    float w = static_cast<float>(a);
    float z = static_cast<float>(b);
    float p = w/z - 3.1428;
    if(p < 0){p = p * (-1);}
    return (p < 0.009);
}
